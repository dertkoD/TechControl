//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TechControl.ServiceReferenceDataOnline {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicOnlineDataSubscriptionRequest", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.SpicOnlineData." +
        "Contracts")]
    [System.SerializableAttribute()]
    public partial class SpicOnlineDataSubscriptionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] UnitIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] UnitIds {
            get {
                return this.UnitIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitIdsField, value) != true)) {
                    this.UnitIdsField = value;
                    this.RaisePropertyChanged("UnitIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicOnlineDataSubscriptionResponse", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.SpicOnlineData." +
        "Contracts")]
    [System.SerializableAttribute()]
    public partial class SpicOnlineDataSubscriptionResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<TechControl.ServiceReferenceDataOnline.SpicOnlineDataSessionId> SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TechControl.ServiceReferenceDataOnline.SpicOnlineDataOperationState StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<TechControl.ServiceReferenceDataOnline.SpicOnlineDataSessionId> SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TechControl.ServiceReferenceDataOnline.SpicOnlineDataOperationState State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicOnlineDataSessionId", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.SpicOnlineData." +
        "Contracts")]
    [System.SerializableAttribute()]
    public partial struct SpicOnlineDataSessionId : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicOnlineDataOperationState", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.SpicOnlineData." +
        "Contracts")]
    [System.SerializableAttribute()]
    public partial class SpicOnlineDataOperationState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ErrorCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TechControl.ServiceReferenceDataOnline.SpicOnlineDataOperationStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ErrorCodes {
            get {
                return this.ErrorCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodesField, value) != true)) {
                    this.ErrorCodesField = value;
                    this.RaisePropertyChanged("ErrorCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TechControl.ServiceReferenceDataOnline.SpicOnlineDataOperationStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicOnlineDataOperationStatus", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.SpicOnlineData." +
        "Contracts")]
    [System.SerializableAttribute()]
    public partial struct SpicOnlineDataOperationStatus : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicOnlineDataResponse", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.SpicOnlineData." +
        "Contracts")]
    [System.SerializableAttribute()]
    public partial class SpicOnlineDataResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TechControl.ServiceReferenceDataOnline.SpicOnlineDataCollection OnlineDataCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TechControl.ServiceReferenceDataOnline.SpicOnlineDataOperationState StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TechControl.ServiceReferenceDataOnline.SpicOnlineDataCollection OnlineDataCollection {
            get {
                return this.OnlineDataCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.OnlineDataCollectionField, value) != true)) {
                    this.OnlineDataCollectionField = value;
                    this.RaisePropertyChanged("OnlineDataCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TechControl.ServiceReferenceDataOnline.SpicOnlineDataOperationState State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicOnlineDataCollection", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.SpicOnlineData." +
        "Contracts")]
    [System.SerializableAttribute()]
    public partial class SpicOnlineDataCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TechControl.ServiceReferenceDataOnline.SpicOnlineData[] DataCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] TargetsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TechControl.ServiceReferenceDataOnline.SpicOnlineData[] DataCollection {
            get {
                return this.DataCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DataCollectionField, value) != true)) {
                    this.DataCollectionField = value;
                    this.RaisePropertyChanged("DataCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Targets {
            get {
                return this.TargetsField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetsField, value) != true)) {
                    this.TargetsField = value;
                    this.RaisePropertyChanged("Targets");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicOnlineData", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.SpicOnlineData." +
        "Contracts")]
    [System.SerializableAttribute()]
    public partial class SpicOnlineData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ConnectionDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TechControl.ServiceReferenceDataOnline.SpicDeviceId DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNavigationValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastMessageTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TechControl.ServiceReferenceDataOnline.SpicNavigation NavigationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NavigationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalMessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ConnectionDateTime {
            get {
                return this.ConnectionDateTimeField;
            }
            set {
                if ((this.ConnectionDateTimeField.Equals(value) != true)) {
                    this.ConnectionDateTimeField = value;
                    this.RaisePropertyChanged("ConnectionDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TechControl.ServiceReferenceDataOnline.SpicDeviceId DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((this.DeviceIdField.Equals(value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNavigationValid {
            get {
                return this.IsNavigationValidField;
            }
            set {
                if ((this.IsNavigationValidField.Equals(value) != true)) {
                    this.IsNavigationValidField = value;
                    this.RaisePropertyChanged("IsNavigationValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastMessageTime {
            get {
                return this.LastMessageTimeField;
            }
            set {
                if ((this.LastMessageTimeField.Equals(value) != true)) {
                    this.LastMessageTimeField = value;
                    this.RaisePropertyChanged("LastMessageTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TechControl.ServiceReferenceDataOnline.SpicNavigation Navigation {
            get {
                return this.NavigationField;
            }
            set {
                if ((object.ReferenceEquals(this.NavigationField, value) != true)) {
                    this.NavigationField = value;
                    this.RaisePropertyChanged("Navigation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NavigationTime {
            get {
                return this.NavigationTimeField;
            }
            set {
                if ((this.NavigationTimeField.Equals(value) != true)) {
                    this.NavigationTimeField = value;
                    this.RaisePropertyChanged("NavigationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalMessages {
            get {
                return this.TotalMessagesField;
            }
            set {
                if ((this.TotalMessagesField.Equals(value) != true)) {
                    this.TotalMessagesField = value;
                    this.RaisePropertyChanged("TotalMessages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicDeviceId", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.Infrastructure." +
        "Data")]
    [System.SerializableAttribute()]
    public partial struct SpicDeviceId : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TechControl.ServiceReferenceDataOnline.SpicDeviceProtocolCode ProtocolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TechControl.ServiceReferenceDataOnline.SpicDeviceProtocolCode Protocol {
            get {
                return this.ProtocolField;
            }
            set {
                if ((this.ProtocolField.Equals(value) != true)) {
                    this.ProtocolField = value;
                    this.RaisePropertyChanged("Protocol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialId {
            get {
                return this.SerialIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialIdField, value) != true)) {
                    this.SerialIdField = value;
                    this.RaisePropertyChanged("SerialId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicNavigation", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.Statistics.Spic" +
        "NavigationFiltrationStat")]
    [System.SerializableAttribute()]
    public partial class SpicNavigation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AltitudeMetersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> AngleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HardwareValidationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TechControl.ServiceReferenceDataOnline.SpicLocation LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavigationSystemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> SatellitesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AltitudeMeters {
            get {
                return this.AltitudeMetersField;
            }
            set {
                if ((this.AltitudeMetersField.Equals(value) != true)) {
                    this.AltitudeMetersField = value;
                    this.RaisePropertyChanged("AltitudeMeters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Angle {
            get {
                return this.AngleField;
            }
            set {
                if ((this.AngleField.Equals(value) != true)) {
                    this.AngleField = value;
                    this.RaisePropertyChanged("Angle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HardwareValidation {
            get {
                return this.HardwareValidationField;
            }
            set {
                if ((this.HardwareValidationField.Equals(value) != true)) {
                    this.HardwareValidationField = value;
                    this.RaisePropertyChanged("HardwareValidation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TechControl.ServiceReferenceDataOnline.SpicLocation Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NavigationSystemType {
            get {
                return this.NavigationSystemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NavigationSystemTypeField, value) != true)) {
                    this.NavigationSystemTypeField = value;
                    this.RaisePropertyChanged("NavigationSystemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> SatellitesCount {
            get {
                return this.SatellitesCountField;
            }
            set {
                if ((this.SatellitesCountField.Equals(value) != true)) {
                    this.SatellitesCountField = value;
                    this.RaisePropertyChanged("SatellitesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicDeviceProtocolCode", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.Infrastructure." +
        "Data")]
    [System.SerializableAttribute()]
    public partial struct SpicDeviceProtocolCode : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicLocation", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.Statistics.Spic" +
        "NavigationFiltrationStat")]
    [System.SerializableAttribute()]
    public partial class SpicLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceDataOnline.ISpicSoapOnlineDataService")]
    public interface ISpicSoapOnlineDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpicSoapOnlineDataService/Subscribe", ReplyAction="http://tempuri.org/ISpicSoapOnlineDataService/SubscribeResponse")]
        TechControl.ServiceReferenceDataOnline.SpicOnlineDataSubscriptionResponse Subscribe(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSubscriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpicSoapOnlineDataService/Subscribe", ReplyAction="http://tempuri.org/ISpicSoapOnlineDataService/SubscribeResponse")]
        System.Threading.Tasks.Task<TechControl.ServiceReferenceDataOnline.SpicOnlineDataSubscriptionResponse> SubscribeAsync(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSubscriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpicSoapOnlineDataService/Unsubscribe", ReplyAction="http://tempuri.org/ISpicSoapOnlineDataService/UnsubscribeResponse")]
        TechControl.ServiceReferenceDataOnline.SpicOnlineDataOperationState Unsubscribe(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSessionId onlineDataSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpicSoapOnlineDataService/Unsubscribe", ReplyAction="http://tempuri.org/ISpicSoapOnlineDataService/UnsubscribeResponse")]
        System.Threading.Tasks.Task<TechControl.ServiceReferenceDataOnline.SpicOnlineDataOperationState> UnsubscribeAsync(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSessionId onlineDataSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpicSoapOnlineDataService/GetOnlineData", ReplyAction="http://tempuri.org/ISpicSoapOnlineDataService/GetOnlineDataResponse")]
        TechControl.ServiceReferenceDataOnline.SpicOnlineDataResponse GetOnlineData(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSessionId onlineDataSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpicSoapOnlineDataService/GetOnlineData", ReplyAction="http://tempuri.org/ISpicSoapOnlineDataService/GetOnlineDataResponse")]
        System.Threading.Tasks.Task<TechControl.ServiceReferenceDataOnline.SpicOnlineDataResponse> GetOnlineDataAsync(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSessionId onlineDataSessionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpicSoapOnlineDataServiceChannel : TechControl.ServiceReferenceDataOnline.ISpicSoapOnlineDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpicSoapOnlineDataServiceClient : System.ServiceModel.ClientBase<TechControl.ServiceReferenceDataOnline.ISpicSoapOnlineDataService>, TechControl.ServiceReferenceDataOnline.ISpicSoapOnlineDataService {
        
        public SpicSoapOnlineDataServiceClient() {
        }
        
        public SpicSoapOnlineDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpicSoapOnlineDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpicSoapOnlineDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpicSoapOnlineDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TechControl.ServiceReferenceDataOnline.SpicOnlineDataSubscriptionResponse Subscribe(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSubscriptionRequest request) {
            return base.Channel.Subscribe(request);
        }
        
        public System.Threading.Tasks.Task<TechControl.ServiceReferenceDataOnline.SpicOnlineDataSubscriptionResponse> SubscribeAsync(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSubscriptionRequest request) {
            return base.Channel.SubscribeAsync(request);
        }
        
        public TechControl.ServiceReferenceDataOnline.SpicOnlineDataOperationState Unsubscribe(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSessionId onlineDataSessionId) {
            return base.Channel.Unsubscribe(onlineDataSessionId);
        }
        
        public System.Threading.Tasks.Task<TechControl.ServiceReferenceDataOnline.SpicOnlineDataOperationState> UnsubscribeAsync(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSessionId onlineDataSessionId) {
            return base.Channel.UnsubscribeAsync(onlineDataSessionId);
        }
        
        public TechControl.ServiceReferenceDataOnline.SpicOnlineDataResponse GetOnlineData(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSessionId onlineDataSessionId) {
            return base.Channel.GetOnlineData(onlineDataSessionId);
        }
        
        public System.Threading.Tasks.Task<TechControl.ServiceReferenceDataOnline.SpicOnlineDataResponse> GetOnlineDataAsync(TechControl.ServiceReferenceDataOnline.SpicOnlineDataSessionId onlineDataSessionId) {
            return base.Channel.GetOnlineDataAsync(onlineDataSessionId);
        }
    }
}
