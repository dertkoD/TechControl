//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TechControl.ServiceReferenceAuthorization {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicAuthorizationRequest", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.Authorization")]
    [System.SerializableAttribute()]
    public partial class SpicAuthorizationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CultureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneOlsonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UiCultureNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureName {
            get {
                return this.CultureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CultureNameField, value) != true)) {
                    this.CultureNameField = value;
                    this.RaisePropertyChanged("CultureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStampUtc {
            get {
                return this.TimeStampUtcField;
            }
            set {
                if ((this.TimeStampUtcField.Equals(value) != true)) {
                    this.TimeStampUtcField = value;
                    this.RaisePropertyChanged("TimeStampUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZoneOlsonId {
            get {
                return this.TimeZoneOlsonIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneOlsonIdField, value) != true)) {
                    this.TimeZoneOlsonIdField = value;
                    this.RaisePropertyChanged("TimeZoneOlsonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UiCultureName {
            get {
                return this.UiCultureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UiCultureNameField, value) != true)) {
                    this.UiCultureNameField = value;
                    this.RaisePropertyChanged("UiCultureName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpicAuthorizationResponse", Namespace="http://schemas.datacontract.org/2004/07/Scout.Plugins.Spic.Server.Authorization")]
    [System.SerializableAttribute()]
    public partial class SpicAuthorizationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthenticatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpireDate {
            get {
                return this.ExpireDateField;
            }
            set {
                if ((this.ExpireDateField.Equals(value) != true)) {
                    this.ExpireDateField = value;
                    this.RaisePropertyChanged("ExpireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthenticated {
            get {
                return this.IsAuthenticatedField;
            }
            set {
                if ((this.IsAuthenticatedField.Equals(value) != true)) {
                    this.IsAuthenticatedField = value;
                    this.RaisePropertyChanged("IsAuthenticated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized {
            get {
                return this.IsAuthorizedField;
            }
            set {
                if ((this.IsAuthorizedField.Equals(value) != true)) {
                    this.IsAuthorizedField = value;
                    this.RaisePropertyChanged("IsAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceAuthorization.ISpicAuthorizationSoapService")]
    public interface ISpicAuthorizationSoapService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpicAuthorizationSoapService/Login", ReplyAction="http://tempuri.org/ISpicAuthorizationSoapService/LoginResponse")]
        TechControl.ServiceReferenceAuthorization.SpicAuthorizationResponse Login(TechControl.ServiceReferenceAuthorization.SpicAuthorizationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpicAuthorizationSoapService/Login", ReplyAction="http://tempuri.org/ISpicAuthorizationSoapService/LoginResponse")]
        System.Threading.Tasks.Task<TechControl.ServiceReferenceAuthorization.SpicAuthorizationResponse> LoginAsync(TechControl.ServiceReferenceAuthorization.SpicAuthorizationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpicAuthorizationSoapService/Logout", ReplyAction="http://tempuri.org/ISpicAuthorizationSoapService/LogoutResponse")]
        void Logout();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpicAuthorizationSoapService/Logout", ReplyAction="http://tempuri.org/ISpicAuthorizationSoapService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpicAuthorizationSoapServiceChannel : TechControl.ServiceReferenceAuthorization.ISpicAuthorizationSoapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpicAuthorizationSoapServiceClient : System.ServiceModel.ClientBase<TechControl.ServiceReferenceAuthorization.ISpicAuthorizationSoapService>, TechControl.ServiceReferenceAuthorization.ISpicAuthorizationSoapService {
        
        public SpicAuthorizationSoapServiceClient() {
        }
        
        public SpicAuthorizationSoapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpicAuthorizationSoapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpicAuthorizationSoapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpicAuthorizationSoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TechControl.ServiceReferenceAuthorization.SpicAuthorizationResponse Login(TechControl.ServiceReferenceAuthorization.SpicAuthorizationRequest request) {
            return base.Channel.Login(request);
        }
        
        public System.Threading.Tasks.Task<TechControl.ServiceReferenceAuthorization.SpicAuthorizationResponse> LoginAsync(TechControl.ServiceReferenceAuthorization.SpicAuthorizationRequest request) {
            return base.Channel.LoginAsync(request);
        }
        
        public void Logout() {
            base.Channel.Logout();
        }
        
        public System.Threading.Tasks.Task LogoutAsync() {
            return base.Channel.LogoutAsync();
        }
    }
}
