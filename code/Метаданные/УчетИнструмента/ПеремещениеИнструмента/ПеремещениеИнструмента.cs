using System;
using System.Collections.Generic;
using System.Text;
using NsgSoft.DataObjects;
using NsgSoft.Database;
using System.IO;
using NsgSoft.Common;
using TechControl.Метаданные.Мониторинг;
using TechControl.Метаданные.Учет;
using TechControl.Метаданные.УчетСпецодеждыИСИЗ;

namespace TechControl.Метаданные.УчетИнструмента
{
    
    public partial class ПеремещениеИнструмента
    {
        protected override List<Guid> BasePost()
        {
            return base.BasePost();
        }

        protected override bool Handling()
        {
            if (ЭтоВозврат)
            {
                return Возврат();
            }
            else
            {
                var докПодтверждения = ПодтверждениеПеремещения.Новый();
                if (ТребуетсяПодтверждение)
                {
                    var cmp = new NsgCompare().Add(ПодтверждениеПеремещения.Names.ДокументОснование, this);
                    if (!докПодтверждения.Find(cmp))
                    {
                        докПодтверждения.New();
                        докПодтверждения.ДокументОснование = this;
                    }
                    докПодтверждения.Handle();
                }

                return ПроведениеПоРегиструУчетИнструмента(докПодтверждения) && ПроведениеПоРегиструОстаткиНоменклатуры();
            }
        }

        private bool Возврат()
        {
            РегистрУчетИнструмента рег = РегистрУчетИнструмента.Новый(this);
            рег.New();

            РегистрУчетИнструмента регОстатки = РегистрУчетИнструмента.Новый();

            ОстаткиНоменклатуры остаткиНоменклатуры = ОстаткиНоменклатуры.Новый(this);
            остаткиНоменклатуры.New();
            var сотрудникОтправитель = Сотрудники.Новый();
            var объектОтправитель = Объекты.Новый();
            if (Отправитель is Сотрудники)
            {
                сотрудникОтправитель = Отправитель as Сотрудники;
                объектОтправитель = сотрудникОтправитель.ОсновнойОбъект;
            }
            else if (Отправитель is Объекты)
            {
                объектОтправитель = Отправитель as Объекты;
                сотрудникОтправитель = объектОтправитель.Ответственный;
            }

            foreach (var строка in Таблица.AllRows)
            {
                регОстатки.New();
                регОстатки.СерийныйНомер = строка.СерийныйНомер;
                if (регОстатки.GetRest(ДатаДокумента.AddSeconds(-1)))
                {
                    рег.Сотрудник = регОстатки.Сотрудник;
                    рег.НоменклатураИнструмента = регОстатки.НоменклатураИнструмента;
                    рег.Объект = регОстатки.Объект;
                    рег.Фотография = строка.Фотография;
                    рег.СерийныйНомер = регОстатки.СерийныйНомер;
                    рег.ДокументПодтверждения = ПодтверждениеПеремещения.Новый();

                    рег.AddMovement();

                    decimal количество = 1;
                    decimal стоимость = строка.НоменклатураИнструмента.ПолучитьЦену(ДатаДокумента);

                    остаткиНоменклатуры.ВидДвижения = Сервис.ВидыДвижений.Расход;
                    остаткиНоменклатуры.Количество = количество;
                    остаткиНоменклатуры.Стоимость = стоимость;
                    остаткиНоменклатуры.Номенклатура = строка.НоменклатураИнструмента;
                    остаткиНоменклатуры.Объект = объектОтправитель;
                    остаткиНоменклатуры.Сотрудник = сотрудникОтправитель;
                    остаткиНоменклатуры.Перемещение = Перемещение.Новый();
                    остаткиНоменклатуры.AddMovement();

                    остаткиНоменклатуры.ВидДвижения = Сервис.ВидыДвижений.Приход;
                    остаткиНоменклатуры.Количество = количество;
                    остаткиНоменклатуры.Стоимость = стоимость;
                    остаткиНоменклатуры.Номенклатура = строка.НоменклатураИнструмента;
                    остаткиНоменклатуры.Объект = регОстатки.Объект;
                    остаткиНоменклатуры.Сотрудник = регОстатки.Сотрудник;
                    остаткиНоменклатуры.Перемещение = Перемещение.Новый();
                    остаткиНоменклатуры.AddMovement();
                }
            }

            return рег.Post() && остаткиНоменклатуры.Post();
        }

        private bool ПроведениеПоРегиструУчетИнструмента(ПодтверждениеПеремещения подтверждение)
        {
            РегистрУчетИнструмента рег = РегистрУчетИнструмента.Новый(this);

            рег.New();

            var объект = Объекты.Новый();
            var сотрудник = Сотрудники.Новый();

            РегистрУчетИнструмента регОстатки = РегистрУчетИнструмента.Новый();
            NsgMemoryTable остатки = null;

            if (Отправитель is Сотрудники сотрудникОтправитель)
            {
                регОстатки.Сотрудник = сотрудникОтправитель;
                остатки = регОстатки.GetRests(ДатаДокумента.AddTicks(-1));
            }
            else if (Отправитель is Объекты объектОтправитель)
            {
                регОстатки.Объект = объектОтправитель;
                остатки = регОстатки.GetRests(ДатаДокумента.AddTicks(-1));
            }

            if (Получатель is Сотрудники сотрудникПолучатель)
            {
                объект = сотрудникПолучатель.ОсновнойОбъект;
                сотрудник = сотрудникПолучатель;

            }
            else if (Получатель is Объекты объектПолучатель)
            {
                объект = объектПолучатель;
                сотрудник = объектПолучатель.Ответственный;
            }

            foreach (var строка in Таблица.AllRows)
            {
                рег.Сотрудник = сотрудник;
                рег.НоменклатураИнструмента = строка.НоменклатураИнструмента;
                рег.Объект = объект;
                рег.Фотография = строка.Фотография;
                рег.СерийныйНомер = строка.СерийныйНомер;
                рег.Дата = ДатаДокумента;
                рег.ДокументПодтверждения = подтверждение;

                рег.AddMovement();
            }

            return рег.Post();
        }

        private bool ПроведениеПоРегиструОстаткиНоменклатуры()
        {
            ОстаткиНоменклатуры остаткиНоменклатуры = ОстаткиНоменклатуры.Новый(this);

            var сотрудникОтправитель = Сотрудники.Новый();
            var объектОтправитель = Объекты.Новый();

            if (Отправитель is Сотрудники)
            {
                сотрудникОтправитель = Отправитель as Сотрудники;
                объектОтправитель = сотрудникОтправитель.ОсновнойОбъект;
            }
            else if (Отправитель is Объекты)
            {
                объектОтправитель = Отправитель as Объекты;
                сотрудникОтправитель = объектОтправитель.Ответственный;
            }

            var сотрудник = Сотрудники.Новый();
            var объект = Объекты.Новый();

            if (Получатель is Сотрудники сотрудникПолучатель)
            {
                сотрудник = сотрудникПолучатель;
                объект = сотрудникПолучатель.ОсновнойОбъект;
            }
            else if (Получатель is Объекты объектПолучатель)
            {
                сотрудник = объектПолучатель.Ответственный;
                объект = объектПолучатель;
            }

            остаткиНоменклатуры.New();
            foreach (var i in this.Таблица.AllRows)
            {
                decimal количество = 1;
                decimal стоимость = i.НоменклатураИнструмента.ПолучитьЦену(ДатаДокумента);
                
                остаткиНоменклатуры.ВидДвижения = Сервис.ВидыДвижений.Расход;
                остаткиНоменклатуры.Количество = количество;
                остаткиНоменклатуры.Стоимость = стоимость;
                остаткиНоменклатуры.Номенклатура = i.НоменклатураИнструмента;
                остаткиНоменклатуры.Объект = объектОтправитель;
                остаткиНоменклатуры.Сотрудник = сотрудникОтправитель;
                остаткиНоменклатуры.Перемещение = Перемещение.Новый();
                остаткиНоменклатуры.AddMovement();

                остаткиНоменклатуры.ВидДвижения = Сервис.ВидыДвижений.Приход;
                остаткиНоменклатуры.Количество = количество;
                остаткиНоменклатуры.Стоимость = стоимость;
                остаткиНоменклатуры.Номенклатура = i.НоменклатураИнструмента;
                остаткиНоменклатуры.Объект = объект;
                остаткиНоменклатуры.Сотрудник = сотрудник;
                остаткиНоменклатуры.Перемещение = Перемещение.Новый();
                остаткиНоменклатуры.AddMovement();
            }
            return остаткиНоменклатуры.Post();
        }
    }

}
