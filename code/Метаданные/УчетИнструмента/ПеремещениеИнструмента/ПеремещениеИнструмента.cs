using System;
using System.Collections.Generic;
using System.Text;
using NsgSoft.DataObjects;
using NsgSoft.Database;
using System.IO;
using NsgSoft.Common;
using TechControl.Метаданные.Мониторинг;
using TechControl.Метаданные.Учет;
using TechControl.Метаданные.УчетСпецодеждыИСИЗ;

namespace TechControl.Метаданные.УчетИнструмента
{
    
    public partial class ПеремещениеИнструмента
    {
        protected override List<Guid> BasePost()
        {
            return base.BasePost();
        }

        protected override bool Handling()
        {
            if (ПроведениеПоРегиструУчетИнструмента() && ПроведениеПоРегиструОстаткиНоменклатуры())
            {
                var докПодтверждения = ПодтверждениеПеремещения.Новый();
                var cmp = new NsgCompare().Add(ПодтверждениеПеремещения.Names.ДокументОснование, this);
                var спПодтверждений = докПодтверждения.FindAll(cmp);
                foreach (var текПодтв in спПодтверждений)
                {
                    try
                    {
                        текПодтв.Handle();
                    }
                    catch (Exception ex)
                    {
                        NsgSettings.MainForm.ShowMessage(ex.ToString());
                    }
                }
            }
            else
            {
                return false;
            }
            
            return true;
        }

        private bool ПроведениеПоРегиструУчетИнструмента()
        {
            РегистрУчетИнструмента рег = РегистрУчетИнструмента.Новый(this);

            рег.New();

            var объект = Объекты.Новый();
            var сотрудник = Сотрудники.Новый();

            РегистрУчетИнструмента регОстатки = РегистрУчетИнструмента.Новый();
            NsgMemoryTable остатки = null;

            if (Отправитель is Сотрудники сотрудникОтправитель)
            {
                регОстатки.Сотрудник = сотрудникОтправитель;
                остатки = регОстатки.GetRests(ДатаДокумента.AddTicks(-1));
            }
            else if (Отправитель is Объекты объектОтправитель)
            {
                регОстатки.Объект = объектОтправитель;
                остатки = регОстатки.GetRests(ДатаДокумента.AddTicks(-1));
            }

            if (Получатель is Сотрудники сотрудникПолучатель)
            {
                объект = сотрудникПолучатель.ОсновнойОбъект;
                сотрудник = сотрудникПолучатель;

            }
            else if (Получатель is Объекты объектПолучатель)
            {
                объект = объектПолучатель;
                сотрудник = объектПолучатель.Ответственный;
            }

            foreach (var строка in Таблица.AllRows)
            {
                рег.Сотрудник = сотрудник;
                рег.НоменклатураИнструмента = строка.НоменклатураИнструмента;
                рег.Объект = объект;
                рег.Фотография = строка.Фотография;
                рег.СерийныйНомер = строка.СерийныйНомер;
                рег.Дата = ДатаДокумента;

                рег.AddMovement();

                foreach (var item in остатки.AllRows)
                {
                    var серийник = item[РегистрУчетИнструмента.Names.СерийныйНомер].ToString();
                    if (строка.СерийныйНомер == серийник)
                    {
                        рег.Сотрудник = item[РегистрУчетИнструмента.Names.Сотрудник].ToReferent() as Сотрудники;
                        рег.НоменклатураИнструмента = строка.НоменклатураИнструмента;
                        рег.Объект = item[РегистрУчетИнструмента.Names.Объект].ToReferent() as Объекты;
                        рег.Фотография = строка.Фотография;
                        рег.СерийныйНомер = серийник;
                        рег.Дата = ДатаДокумента.AddTicks(-1);

                        рег.AddMovement();
                    }
                }
            }

            return рег.Post();
        }

        private bool ПроведениеПоРегиструОстаткиНоменклатуры()
        {
            ОстаткиНоменклатуры остаткиНоменклатуры = ОстаткиНоменклатуры.Новый(this);

            var сотрудникОтправитель = Сотрудники.Новый();
            var объектОтправитель = Объекты.Новый();

            if (Отправитель is Сотрудники)
            {
                сотрудникОтправитель = Отправитель as Сотрудники;
                объектОтправитель = сотрудникОтправитель.ОсновнойОбъект;
            }
            else if (Отправитель is Объекты)
            {
                объектОтправитель = Отправитель as Объекты;
                сотрудникОтправитель = объектОтправитель.Ответственный;
            }

            var сотрудник = Сотрудники.Новый();
            var объект = Объекты.Новый();

            if (Получатель is Сотрудники сотрудникПолучатель)
            {
                сотрудник = сотрудникПолучатель;
                объект = сотрудникПолучатель.ОсновнойОбъект;
            }
            else if (Получатель is Объекты объектПолучатель)
            {
                сотрудник = объектПолучатель.Ответственный;
                объект = объектПолучатель;
            }

            остаткиНоменклатуры.New();
            foreach (var i in this.Таблица.AllRows)
            {
                decimal количество = 1;
                decimal стоимость = i.НоменклатураИнструмента.ПолучитьСтоимость();
                
                остаткиНоменклатуры.ВидДвижения = Сервис.ВидыДвижений.Расход;
                остаткиНоменклатуры.Количество = количество;
                остаткиНоменклатуры.Стоимость = стоимость;
                остаткиНоменклатуры.Номенклатура = i.НоменклатураИнструмента;
                остаткиНоменклатуры.Объект = объектОтправитель;
                остаткиНоменклатуры.Сотрудник = сотрудникОтправитель;
                остаткиНоменклатуры.Перемещение = null;
                остаткиНоменклатуры.AddMovement();

                остаткиНоменклатуры.ВидДвижения = Сервис.ВидыДвижений.Приход;
                остаткиНоменклатуры.Количество = количество;
                остаткиНоменклатуры.Стоимость = стоимость;
                остаткиНоменклатуры.Номенклатура = i.НоменклатураИнструмента;
                остаткиНоменклатуры.Объект = объект;
                остаткиНоменклатуры.Сотрудник = сотрудник;
                остаткиНоменклатуры.Перемещение = null;
                остаткиНоменклатуры.AddMovement();
            }
            return остаткиНоменклатуры.Post();
        }
    }

}
