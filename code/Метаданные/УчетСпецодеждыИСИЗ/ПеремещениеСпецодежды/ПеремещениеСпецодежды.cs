using System;
using System.Collections.Generic;
using System.Text;
using NsgSoft.DataObjects;
using NsgSoft.Database;
using System.IO;
using NsgSoft.Common;
using TechControl.Метаданные.Мониторинг;
using TechControl.Метаданные.Учет;

namespace TechControl.Метаданные.УчетСпецодеждыИСИЗ
{
    
    public partial class ПеремещениеСпецодежды
    {
        protected override bool Handling()
        {
            РегистрУчетСпецодежды рег = РегистрУчетСпецодежды.Новый(this);
            ОстаткиНоменклатуры остаткиНоменклатуры = ОстаткиНоменклатуры.Новый(this);
            if (Отправитель is Сотрудники сотрудникОтправитель)
            {
                РегистрУчетСпецодежды регОстатки = РегистрУчетСпецодежды.Новый();
                регОстатки.Сотрудник = сотрудникОтправитель;
                var остатки = регОстатки.GetRests(ДатаДокумента.AddTicks(-1));
                List<string> уникальныеНомера = new List<string>();
                foreach (var строка in Таблица.AllRows)
                {
                    foreach (var item in остатки.AllRows)
                    {
                        var nom = item[РегистрУчетСпецодежды.Names.НоменклатураСпецодеждыИСИЗ].ToReferent() as Номенклатура;

                        if (строка.НоменклатураСпецодеждыИСИЗ == nom)
                        {
                            for (int i = 0; i < строка.Количество; i++)
                            {
                                var номер = item[РегистрУчетСпецодежды.Names.УникальныйНомер].ToString();
                                if (!уникальныеНомера.Contains(номер))
                                {
                                    рег.Сотрудник = сотрудникОтправитель;
                                    рег.КомплектСпецодежды = item[РегистрУчетСпецодежды.Names.КомплектСпецодежды].ToReferent() as КомплектыСпецодежды;
                                    рег.НоменклатураСпецодеждыИСИЗ = nom;
                                    рег.ДатаВыдачи = item[РегистрУчетСпецодежды.Names.ДатаВыдачи].ToDateTime();
                                    рег.КонецПериода = ДатаДокумента;
                                    рег.УникальныйНомер = номер;
                                    рег.Размер = item[РегистрУчетСпецодежды.Names.Размер].ToReferent() as Размеры;
                                    рег.AddMovement();

                                    уникальныеНомера.Add(номер);
                                }
                            }
                        }
                    }
                }
            }
            else if (Отправитель is Объекты объект)
            {
                остаткиНоменклатуры.New();
                foreach (var i in Таблица.AllRows)
                {
                    остаткиНоменклатуры.ВидДвижения = Сервис.ВидыДвижений.Расход;
                    остаткиНоменклатуры.Количество = i.Количество;
                    остаткиНоменклатуры.Стоимость = i.Количество * i.НоменклатураСпецодеждыИСИЗ.ПолучитьСтоимость();
                    остаткиНоменклатуры.Номенклатура = i.НоменклатураСпецодеждыИСИЗ;
                    остаткиНоменклатуры.Объект = объект;
                    остаткиНоменклатуры.Сотрудник = Получатель is Сотрудники ? Получатель as Сотрудники : Сотрудники.Новый();
                    остаткиНоменклатуры.AddMovement();
                }
            }

            if (Получатель is Сотрудники сотрудник)
            {
                foreach (var item in Таблица.AllRows)
                {
                    for (int i = 0; i < item.Количество; i++)
                    {
                        рег.Сотрудник = сотрудник;
                        рег.КомплектСпецодежды = item.КомплектСпецодежды;
                        рег.НоменклатураСпецодеждыИСИЗ = item.НоменклатураСпецодеждыИСИЗ;
                        рег.ДатаВыдачи = ДатаДокумента;
                        рег.Размер = item.Размер;
                        рег.УникальныйНомер = Guid.NewGuid().ToString();

                        рег.AddMovement();
                    }
                }
            }
            else if (Получатель is Объекты объект)
            {
                остаткиНоменклатуры.New();
                foreach (var i in Таблица.AllRows)
                {
                    остаткиНоменклатуры.ВидДвижения = Сервис.ВидыДвижений.Приход;
                    остаткиНоменклатуры.Количество = i.Количество;
                    остаткиНоменклатуры.Стоимость = i.Количество * i.НоменклатураСпецодеждыИСИЗ.ПолучитьСтоимость();
                    остаткиНоменклатуры.Номенклатура = i.НоменклатураСпецодеждыИСИЗ;
                    остаткиНоменклатуры.Объект = объект;
                    остаткиНоменклатуры.Сотрудник = Получатель is Сотрудники ? Получатель as Сотрудники : Сотрудники.Новый();
                    остаткиНоменклатуры.AddMovement();
                }
            }

            return рег.Post() && остаткиНоменклатуры.Post();
        }
    }

}
