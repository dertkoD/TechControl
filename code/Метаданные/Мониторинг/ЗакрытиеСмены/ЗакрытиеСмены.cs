using System;
using System.Collections.Generic;
using System.Text;
using NsgSoft.DataObjects;
using NsgSoft.Database;
using System.IO;
using NsgSoft.Common;



namespace TechControl.Метаданные.Мониторинг
{

    public partial class ЗакрытиеСмены
    {
        protected override bool Handling()
        {
            var фиксацияИстории = ФиксацияИстории.Новый();
            фиксацияИстории.New();
            фиксацияИстории.Владелец = this;
            фиксацияИстории.Объект = this.Объект;
            фиксацияИстории.Техника = this.Техника;
            var фи2 = ФиксацияИстории.Новый();
            фи2.Владелец = this;
            фи2.Объект = this.Объект;
            фи2.Техника = this.Техника;
            фи2.GetRest(this.Время);
            //var allRests = фи2.GetRests(this.Время, ФиксацияИстории.Names.Объект);
            if (фи2.СтатусТехники == СтатусТехники.ВРаботе)
            //foreach (var i in allRests.Rows)
            {

                //if (фи2[ФиксацияИстории.Names.СтатусТехники].ToReferent() as СтатусТехники == СтатусТехники.ВРаботе)
                //{
                    var предВремя = фи2.Дата;
                    РегистрСмен регистрСмен = РегистрСмен.Новый();
                    фиксацияИстории.New();
                    регистрСмен.New();
                    регистрСмен.Document = this;
                    регистрСмен.Техника = фиксацияИстории.Техника = this.Техника;//i[ФиксацияИстории.Names.Техника].ToReferent() as Техника;
                    регистрСмен.Объект = фиксацияИстории.Объект = this.Объект;
                    decimal price;
                    if (фи2.Владелец is ФормированиеСмены)
                    {
                        var doc = фи2.Владелец as ФормированиеСмены;
                        price = doc.Тариф.Стоимость;
                    }
                    else
                    {
                        регистрСмен.GetRest(this.Время);
                        price = (регистрСмен.ОтработанноеВремя == 0) ? 0 : регистрСмен.Сумма / регистрСмен.ОтработанноеВремя;
                    }
                    регистрСмен.Сотрудник = фиксацияИстории.Сотрудник = фи2.Сотрудник;
                    регистрСмен.ДатаДокумента = фиксацияИстории.Дата = фиксацияИстории.Время = NsgService.EndOfDay(this.ДатаДокумента);
                    фиксацияИстории.СтатусТехники = СтатусТехники.НеРаботает;
                    фиксацияИстории.Владелец = this;
                    фиксацияИстории.AddMovement();
                    //фи.Post();

                    регистрСмен.ОтработанноеВремя = (предВремя == NsgService.MinDate) ? 0 : (decimal)(фиксацияИстории.Время - предВремя).TotalHours;
                    регистрСмен.Сумма = price * регистрСмен.ОтработанноеВремя;
                    регистрСмен.ВидДвижения = Сервис.ВидыДвижений.Расход;
                    регистрСмен.AddMovement();
                    регистрСмен.Post();

                    //фи.New();
                    фиксацияИстории.Техника = this.Техника;// i[ФиксацияИстории.Names.Техника].ToReferent() as Техника;
                    фиксацияИстории.Объект = this.Объект;
                    фиксацияИстории.Дата = фиксацияИстории.Время = NsgService.BeginOfDay(this.ДатаДокумента.AddDays(1));
                    фиксацияИстории.СтатусТехники = СтатусТехники.ВРаботе;
                    фиксацияИстории.Владелец = this;
                    фиксацияИстории.AddMovement();
                    фиксацияИстории.Post();
                //}
            }
            return true;
        }
    }

}
